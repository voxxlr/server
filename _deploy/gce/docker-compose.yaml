# Step1
# add A records for DOMAIN.com doc.DOMAIN.com app.DOMAIN.com www.DOMAIN.com

# Step2
# docker compose run certbot certonly  --manual --preferred-challenges dns -d DOMAIN.com -d www.DOMAIN.com -d app.DOMAIN.com -d doc.DOMAIN.com
# chmod -R 777 ./certbot

# Step3
# docker compose up

services:
     
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - www

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    profiles: ["cli-only"]

  doc:
    image: ghcr.io/voxxlr/vx-doc:main
    container_name: vx-doc
    command: inline
    env_file: .env
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  app:
    image: ghcr.io/voxxlr/vx-app:main
    container_name: vx-app
    env_file: .env
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    depends_on:
      - doc

  www:
    image: ghcr.io/voxxlr/vx-www:main
    container_name: vx-www
    env_file: .env
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    depends_on:
      - app
